# set up POSTGRES service

name: Run Tests
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:19.03.12
        options: --privileged
        ports:
          - 5432:5432
          - 8053:8042
          - 80:80
        volumes:
          - docker-test-data:/var/lib/docker

      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: ORTHANC
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 12343
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest requests psycopg2 psycopg2-binary selenium
      - name: Start Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d
          docker-compose -f docker-compose.yml ps

      - name: Run tests
        run: |
          pytest test_services.py

      - name: Stop Docker Compose
        run: |
          docker-compose -f docker-compose.yml down

      # - name: Run tests
      #   run: |
      #     pytest
      # - name: Checkout code
      #   uses: actions/checkout@v3
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2
      # - name: Build and start containers
      #   run: |
      #     docker-compose up -d
      # - name: Run tests
      #   run: |
      #     pip install pytest requests psycopg2 psycopg2-binary
      #     pytest tests/
    # volumes:
    #   docker-test-data:
